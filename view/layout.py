# -*- coding: utf-8 -*- ############################################################################# Python code generated with wxFormBuilder (version Sep 12 2010)## http://www.wxformbuilder.org/#### PLEASE DO "NOT" EDIT THIS FILE!###########################################################################from ObjectListView import ObjectListViewimport wx############################################################################# Class MainFrame###########################################################################class MainFrame ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = u"Order App", pos = wx.DefaultPosition, size = wx.Size( 500,300 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )				self.menubar = wx.MenuBar( 0 )		self.fileMenu = wx.Menu()		self.menuitem_prefs = wx.MenuItem( self.fileMenu, wx.ID_PREFERENCES, u"Preferences"+ u"\t" + u"CTRL+,", wx.EmptyString, wx.ITEM_NORMAL )		self.fileMenu.AppendItem( self.menuitem_prefs )				self.menuitem_quit = wx.MenuItem( self.fileMenu, wx.ID_EXIT, u"Quit"+ u"\t" + u"CTRL+W", wx.EmptyString, wx.ITEM_NORMAL )		self.fileMenu.AppendItem( self.menuitem_quit )				self.viewBooksMenuItem = wx.MenuItem( self.fileMenu, wx.ID_ANY, u"View Books", wx.EmptyString, wx.ITEM_NORMAL )		self.fileMenu.AppendItem( self.viewBooksMenuItem )				self.menubar.Append( self.fileMenu, u"File" ) 				self.helpMenu = wx.Menu()		self.menuitem_about = wx.MenuItem( self.helpMenu, wx.ID_ABOUT, u"About Order App", wx.EmptyString, wx.ITEM_NORMAL )		self.helpMenu.AppendItem( self.menuitem_about )				self.menuitem_help = wx.MenuItem( self.helpMenu, wx.ID_HELP, u"Help", wx.EmptyString, wx.ITEM_NORMAL )		self.helpMenu.AppendItem( self.menuitem_help )				self.menubar.Append( self.helpMenu, u"Help" ) 				self.SetMenuBar( self.menubar )				buttonSizer = wx.BoxSizer( wx.VERTICAL )				self.viewBooksButtton = wx.Button( self, wx.ID_ANY, u"View Books", wx.DefaultPosition, wx.DefaultSize, 0 )		buttonSizer.Add( self.viewBooksButtton, 0, wx.ALL|wx.EXPAND, 5 )				self.quitButton = wx.Button( self, wx.ID_ANY, u"Quit!", wx.DefaultPosition, wx.DefaultSize, 0 )		buttonSizer.Add( self.quitButton, 0, wx.ALL|wx.EXPAND, 5 )				self.orderEditButon = wx.Button( self, wx.ID_ANY, u"Edit Order", wx.DefaultPosition, wx.DefaultSize, 0 )		buttonSizer.Add( self.orderEditButon, 0, wx.ALL|wx.EXPAND, 5 )				self.SetSizer( buttonSizer )		self.Layout()				self.Centre( wx.BOTH )				# Connect Events		self.Bind( wx.EVT_CLOSE, self.OnClose )		self.Bind( wx.EVT_MENU, self.OnPrefs, id = self.menuitem_prefs.GetId() )		self.Bind( wx.EVT_MENU, self.OnQuit, id = self.menuitem_quit.GetId() )		self.Bind( wx.EVT_MENU, self.OnViewBooks, id = self.viewBooksMenuItem.GetId() )		self.Bind( wx.EVT_MENU, self.OnAbout, id = self.menuitem_about.GetId() )		self.Bind( wx.EVT_MENU, self.OnHelp, id = self.menuitem_help.GetId() )		self.viewBooksButtton.Bind( wx.EVT_BUTTON, self.OnViewBooks )		self.quitButton.Bind( wx.EVT_BUTTON, self.OnQuit )		def __del__( self ):		pass			# Virtual event handlers, overide them in your derived class	def OnClose( self, event ):		event.Skip()		def OnPrefs( self, event ):		event.Skip()		def OnQuit( self, event ):		event.Skip()		def OnViewBooks( self, event ):		event.Skip()		def OnAbout( self, event ):		event.Skip()		def OnHelp( self, event ):		event.Skip()			############################################################################# Class BookListFrame###########################################################################class BookListFrame ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size( 600,415 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.Size( 400,415 ), wx.DefaultSize )				topSizer = wx.BoxSizer( wx.VERTICAL )				searchSizer = wx.BoxSizer( wx.HORIZONTAL )				self.searchText = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		searchSizer.Add( self.searchText, 0, wx.ALL, 5 )				self.searchButton = wx.Button( self, wx.ID_ANY, u"Search", wx.DefaultPosition, wx.DefaultSize, 0 )		searchSizer.Add( self.searchButton, 0, wx.ALL, 5 )				topSizer.Add( searchSizer, 0, wx.EXPAND, 5 )				self.searchDivider = wx.StaticLine( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.LI_HORIZONTAL )		topSizer.Add( self.searchDivider, 0, wx.EXPAND |wx.ALL, 5 )				mainSizer = wx.BoxSizer( wx.HORIZONTAL )				self.bookList = ObjectListView( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.LC_REPORT|wx.LC_SINGLE_SEL|wx.LC_VRULES|wx.SUNKEN_BORDER )		mainSizer.Add( self.bookList, 4, wx.ALL|wx.EXPAND, 5 )				bookEditSizer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Book" ), wx.VERTICAL )				bookEditSizer.SetMinSize( wx.Size( 250,350 ) ) 		self.bookEditPanel = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )		self.bookEditPanel.Enable( False )				editFieldSizer = wx.FlexGridSizer( 6, 2, 0, 0 )		editFieldSizer.AddGrowableCol( 1 )		editFieldSizer.SetFlexibleDirection( wx.BOTH )		editFieldSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.m_staticText2 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"ISBN13", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText2.Wrap( -1 )		editFieldSizer.Add( self.m_staticText2, 0, wx.ALL, 5 )				self.isbnText = wx.TextCtrl( self.bookEditPanel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_PROCESS_ENTER )		editFieldSizer.Add( self.isbnText, 1, wx.ALL|wx.EXPAND, 5 )				self.label2 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"Title", wx.DefaultPosition, wx.DefaultSize, 0 )		self.label2.Wrap( -1 )		editFieldSizer.Add( self.label2, 0, wx.ALL, 5 )				self.titleText = wx.TextCtrl( self.bookEditPanel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		editFieldSizer.Add( self.titleText, 1, wx.ALL|wx.EXPAND, 5 )				self.m_staticText5 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"Authors", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText5.Wrap( -1 )		editFieldSizer.Add( self.m_staticText5, 0, wx.ALL, 5 )				self.authorList = ObjectListView( self.bookEditPanel, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.LC_REPORT|wx.LC_VRULES|wx.SUNKEN_BORDER )		editFieldSizer.Add( self.authorList, 1, wx.ALL|wx.EXPAND, 5 )				self.m_staticText4 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"Publisher", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText4.Wrap( -1 )		editFieldSizer.Add( self.m_staticText4, 0, wx.ALL, 5 )				publisherComboChoices = []		self.publisherCombo = wx.ComboBox( self.bookEditPanel, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, publisherComboChoices, 0 )		editFieldSizer.Add( self.publisherCombo, 1, wx.ALL|wx.EXPAND, 5 )				self.m_staticText6 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"Binding", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText6.Wrap( -1 )		editFieldSizer.Add( self.m_staticText6, 0, wx.ALL, 5 )				bindingComboChoices = []		self.bindingCombo = wx.ComboBox( self.bookEditPanel, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, bindingComboChoices, 0 )		editFieldSizer.Add( self.bindingCombo, 1, wx.ALL|wx.EXPAND, 5 )				self.m_staticText12 = wx.StaticText( self.bookEditPanel, wx.ID_ANY, u"Location", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText12.Wrap( -1 )		editFieldSizer.Add( self.m_staticText12, 0, wx.ALL, 5 )				locationComboChoices = []		self.locationCombo = wx.ComboBox( self.bookEditPanel, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, locationComboChoices, 0 )		editFieldSizer.Add( self.locationCombo, 1, wx.ALL|wx.EXPAND, 5 )				self.bookEditPanel.SetSizer( editFieldSizer )		self.bookEditPanel.Layout()		editFieldSizer.Fit( self.bookEditPanel )		bookEditSizer.Add( self.bookEditPanel, 1, wx.ALL|wx.EXPAND, 5 )				buttonSizer = wx.BoxSizer( wx.HORIZONTAL )						buttonSizer.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )				self.editConfirmationButton = wx.Button( self, wx.ID_ANY, u"Update Book", wx.DefaultPosition, wx.DefaultSize, 0 )		self.editConfirmationButton.Enable( False )				buttonSizer.Add( self.editConfirmationButton, 0, wx.ALL, 5 )				bookEditSizer.Add( buttonSizer, 0, wx.EXPAND, 5 )				mainSizer.Add( bookEditSizer, 3, 0, 5 )				topSizer.Add( mainSizer, 1, wx.EXPAND, 5 )				self.SetSizer( topSizer )		self.Layout()				self.Centre( wx.BOTH )				# Connect Events		self.bookList.Bind( wx.EVT_LIST_DELETE_ITEM, self.OnDeleteBook )		self.bookList.Bind( wx.EVT_LIST_ITEM_DESELECTED, self.OnDeselectBook )		self.bookList.Bind( wx.EVT_LIST_ITEM_SELECTED, self.OnSelectBook )		self.isbnText.Bind( wx.EVT_TEXT_ENTER, self.OnISBNEnter )		def __del__( self ):		pass			# Virtual event handlers, overide them in your derived class	def OnDeleteBook( self, event ):		event.Skip()		def OnDeselectBook( self, event ):		event.Skip()		def OnSelectBook( self, event ):		event.Skip()		def OnISBNEnter( self, event ):		event.Skip()	############################################################################# Class NewBookDialog###########################################################################class NewBookDialog ( wx.Dialog ):		def __init__( self, parent ):		wx.Dialog.__init__ ( self, parent, id = wx.ID_ANY, title = u"Add Book to Database", pos = wx.DefaultPosition, size = wx.DefaultSize, style = wx.DEFAULT_DIALOG_STYLE )				self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )				topSizer = wx.BoxSizer( wx.VERTICAL )				bookSizer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Book Properties" ), wx.VERTICAL )				editFieldSizer = wx.FlexGridSizer( 6, 2, 0, 0 )		editFieldSizer.AddGrowableCol( 1 )		editFieldSizer.SetFlexibleDirection( wx.BOTH )		editFieldSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.isbnLabel = wx.StaticText( self, wx.ID_ANY, u"ISBN13", wx.DefaultPosition, wx.DefaultSize, 0 )		self.isbnLabel.Wrap( -1 )		editFieldSizer.Add( self.isbnLabel, 0, wx.ALL, 5 )				self.isbnText = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_PROCESS_ENTER )		editFieldSizer.Add( self.isbnText, 1, wx.ALL|wx.EXPAND, 5 )				self.titleLabel = wx.StaticText( self, wx.ID_ANY, u"Title", wx.DefaultPosition, wx.DefaultSize, 0 )		self.titleLabel.Wrap( -1 )		editFieldSizer.Add( self.titleLabel, 0, wx.ALL, 5 )				self.titleText = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		editFieldSizer.Add( self.titleText, 1, wx.ALL|wx.EXPAND, 5 )				self.authorsLabel = wx.StaticText( self, wx.ID_ANY, u"Authors", wx.DefaultPosition, wx.DefaultSize, 0 )		self.authorsLabel.Wrap( -1 )		editFieldSizer.Add( self.authorsLabel, 0, wx.ALL, 5 )				self.authorList = ObjectListView( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.LC_REPORT|wx.LC_VRULES|wx.SUNKEN_BORDER )		editFieldSizer.Add( self.authorList, 1, wx.ALL|wx.EXPAND, 5 )						editFieldSizer.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )				authorButtonSizer = wx.BoxSizer( wx.VERTICAL )				self.addAuthorButton = wx.Button( self, wx.ID_ANY, u"Add Author", wx.DefaultPosition, wx.DefaultSize, 0 )		authorButtonSizer.Add( self.addAuthorButton, 0, wx.ALL|wx.ALIGN_RIGHT, 5 )				editFieldSizer.Add( authorButtonSizer, 1, wx.EXPAND, 5 )				self.publisherLabel = wx.StaticText( self, wx.ID_ANY, u"Publisher", wx.DefaultPosition, wx.DefaultSize, 0 )		self.publisherLabel.Wrap( -1 )		editFieldSizer.Add( self.publisherLabel, 0, wx.ALL, 5 )				pubSizer = wx.BoxSizer( wx.HORIZONTAL )				m_comboBox12Choices = []		self.m_comboBox12 = wx.ComboBox( self, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, m_comboBox12Choices, wx.CB_DROPDOWN|wx.CB_SORT )		pubSizer.Add( self.m_comboBox12, 1, wx.ALL, 5 )				self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY, wx.NullBitmap, wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )		pubSizer.Add( self.m_bpButton1, 0, wx.ALL, 5 )				editFieldSizer.Add( pubSizer, 1, wx.EXPAND, 5 )				self.bindingLabel = wx.StaticText( self, wx.ID_ANY, u"Binding", wx.DefaultPosition, wx.DefaultSize, 0 )		self.bindingLabel.Wrap( -1 )		editFieldSizer.Add( self.bindingLabel, 0, wx.ALL, 5 )				bindingSizer = wx.BoxSizer( wx.HORIZONTAL )				m_comboBox11Choices = []		self.m_comboBox11 = wx.ComboBox( self, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, m_comboBox11Choices, wx.CB_DROPDOWN|wx.CB_SORT )		bindingSizer.Add( self.m_comboBox11, 1, wx.ALL, 5 )				self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, wx.NullBitmap, wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )		bindingSizer.Add( self.m_bpButton2, 0, wx.ALL, 5 )				editFieldSizer.Add( bindingSizer, 1, wx.EXPAND, 5 )				self.locationLabel = wx.StaticText( self, wx.ID_ANY, u"Location", wx.DefaultPosition, wx.DefaultSize, 0 )		self.locationLabel.Wrap( -1 )		editFieldSizer.Add( self.locationLabel, 0, wx.ALL, 5 )				locationSizer = wx.BoxSizer( wx.HORIZONTAL )				m_comboBox10Choices = []		self.m_comboBox10 = wx.ComboBox( self, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, m_comboBox10Choices, wx.CB_DROPDOWN|wx.CB_SORT )		locationSizer.Add( self.m_comboBox10, 1, wx.ALL, 5 )				self.m_bpButton3 = wx.BitmapButton( self, wx.ID_ANY, wx.NullBitmap, wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )		locationSizer.Add( self.m_bpButton3, 0, wx.ALL, 5 )				editFieldSizer.Add( locationSizer, 1, wx.EXPAND, 5 )				bookSizer.Add( editFieldSizer, 1, wx.EXPAND, 5 )				topSizer.Add( bookSizer, 1, wx.EXPAND, 5 )				buttonSizer = wx.StdDialogButtonSizer()		self.buttonSizerOK = wx.Button( self, wx.ID_OK )		buttonSizer.AddButton( self.buttonSizerOK )		self.buttonSizerCancel = wx.Button( self, wx.ID_CANCEL )		buttonSizer.AddButton( self.buttonSizerCancel )		buttonSizer.Realize();		topSizer.Add( buttonSizer, 0, wx.EXPAND, 5 )				self.SetSizer( topSizer )		self.Layout()		topSizer.Fit( self )				self.Centre( wx.BOTH )				# Connect Events		self.isbnText.Bind( wx.EVT_TEXT_ENTER, self.OnISBNEnter )		self.buttonSizerOK.Bind( wx.EVT_BUTTON, self.OnAddBook )		def __del__( self ):		pass			# Virtual event handlers, overide them in your derived class	def OnISBNEnter( self, event ):		event.Skip()		def OnAddBook( self, event ):		event.Skip()	############################################################################# Class OrderFrame###########################################################################class OrderFrame ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size( 500,300 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )				topSizer = wx.BoxSizer( wx.VERTICAL )				headerSizer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Order Header" ), wx.VERTICAL )				staticHeaderSizer = wx.FlexGridSizer( 2, 4, 0, 0 )		staticHeaderSizer.AddGrowableRow( 3 )		staticHeaderSizer.SetFlexibleDirection( wx.BOTH )		staticHeaderSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.poLabel = wx.StaticText( self, wx.ID_ANY, u"PO", wx.DefaultPosition, wx.DefaultSize, 0 )		self.poLabel.Wrap( -1 )		staticHeaderSizer.Add( self.poLabel, 0, wx.ALL, 5 )				self.poText = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		staticHeaderSizer.Add( self.poText, 0, wx.ALL, 5 )				self.distributorLabel = wx.StaticText( self, wx.ID_ANY, u"Distributor", wx.DefaultPosition, wx.DefaultSize, 0 )		self.distributorLabel.Wrap( -1 )		staticHeaderSizer.Add( self.distributorLabel, 0, wx.ALL, 5 )				distributorComboChoices = []		self.distributorCombo = wx.ComboBox( self, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, distributorComboChoices, wx.CB_DROPDOWN|wx.CB_SORT )		staticHeaderSizer.Add( self.distributorCombo, 1, wx.ALL|wx.EXPAND, 5 )				self.dateLabel = wx.StaticText( self, wx.ID_ANY, u"Order Date", wx.DefaultPosition, wx.DefaultSize, 0 )		self.dateLabel.Wrap( -1 )		staticHeaderSizer.Add( self.dateLabel, 0, wx.ALL, 5 )				self.orderDatePicker = wx.DatePickerCtrl( self, wx.ID_ANY, wx.DefaultDateTime, wx.DefaultPosition, wx.DefaultSize, wx.DP_DEFAULT )		staticHeaderSizer.Add( self.orderDatePicker, 0, wx.ALL, 5 )				self.shippingLabel = wx.StaticText( self, wx.ID_ANY, u"Shipping Method", wx.DefaultPosition, wx.DefaultSize, 0 )		self.shippingLabel.Wrap( -1 )		staticHeaderSizer.Add( self.shippingLabel, 0, wx.ALL, 5 )				shippingComboChoices = []		self.shippingCombo = wx.ComboBox( self, wx.ID_ANY, u"Combo!", wx.DefaultPosition, wx.DefaultSize, shippingComboChoices, 0 )		staticHeaderSizer.Add( self.shippingCombo, 1, wx.ALL|wx.EXPAND, 5 )				headerSizer.Add( staticHeaderSizer, 0, wx.EXPAND, 5 )				self.commentLabel = wx.StaticText( self, wx.ID_ANY, u"Special Instructions", wx.DefaultPosition, wx.DefaultSize, 0 )		self.commentLabel.Wrap( -1 )		headerSizer.Add( self.commentLabel, 0, wx.ALL, 5 )				self.commentText = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_WORDWRAP )		self.commentText.SetMaxSize( wx.Size( -1,100 ) )				headerSizer.Add( self.commentText, 1, wx.ALL|wx.EXPAND, 5 )				topSizer.Add( headerSizer, 0, wx.EXPAND, 5 )				entrySizer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Order Entries" ), wx.VERTICAL )				self.orderEntryList = ObjectListView( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.LC_REPORT|wx.LC_VRULES|wx.SUNKEN_BORDER )		entrySizer.Add( self.orderEntryList, 1, wx.ALL|wx.EXPAND, 5 )				topSizer.Add( entrySizer, 1, wx.EXPAND, 5 )				self.SetSizer( topSizer )		self.Layout()				self.Centre( wx.BOTH )		def __del__( self ):		pass	